<map id="Graphical Class Hierarchy" name="Graphical Class Hierarchy">
<area shape="rect" id="node1" href="$class_action.html" title="Large scale transformations applied to the varnode/op graph." alt="" coords="5,1677,64,1704"/>
<area shape="rect" id="node2" href="$class_action_active_param.html" title="Determine active parameters to sub&#45;functions." alt="" coords="133,5,265,32"/>
<area shape="rect" id="node3" href="$class_action_active_return.html" title="Determine which sub&#45;functions have active output Varnodes." alt="" coords="133,56,265,83"/>
<area shape="rect" id="node4" href="$class_action_assign_high.html" title="Assign initial high&#45;level HighVariable objects to each Varnode." alt="" coords="137,107,262,133"/>
<area shape="rect" id="node5" href="$class_action_block_structure.html" title="Structure control&#45;flow using standard high&#45;level code constructs." alt="" coords="127,157,272,184"/>
<area shape="rect" id="node6" href="$class_action_conditional_const.html" title="Propagate conditional constants." alt="" coords="121,208,278,235"/>
<area shape="rect" id="node7" href="$class_action_conditional_exe.html" title="Search for and remove various forms of redundant CBRANCH operations." alt="" coords="126,259,273,285"/>
<area shape="rect" id="node8" href="$class_action_constant_ptr.html" title="Check for constants, with pointer type, that correspond to global symbols." alt="" coords="135,309,263,336"/>
<area shape="rect" id="node9" href="$class_action_constbase.html" title="Search for input Varnodes that have been officially provided constant values." alt="" coords="139,360,260,387"/>
<area shape="rect" id="node10" href="$class_action_copy_marker.html" title="Mark COPY operations between Varnodes representing the object as non&#45;printing." alt="" coords="135,411,264,437"/>
<area shape="rect" id="node11" href="$class_action_dead_code.html" title="Dead code removal. Eliminate dead p&#45;code ops." alt="" coords="140,461,259,488"/>
<area shape="rect" id="node12" href="$class_action_default_params.html" title="Find a prototype for each sub&#45;function." alt="" coords="127,512,271,539"/>
<area shape="rect" id="node13" href="$class_action_deindirect.html" title="Eliminate locally constant indirect calls." alt="" coords="141,563,258,589"/>
<area shape="rect" id="node14" href="$class_action_determined_branch.html" title="Remove conditional branches if the condition is constant." alt="" coords="116,613,283,640"/>
<area shape="rect" id="node15" href="$class_action_direct_write.html" title="Mark Varnodes built out of legal parameters." alt="" coords="137,664,261,691"/>
<area shape="rect" id="node16" href="$class_action_do_nothing.html" title="Remove blocks that do nothing." alt="" coords="140,715,259,741"/>
<area shape="rect" id="node17" href="$class_action_dynamic_mapping.html" title="Attach dynamically mapped symbols to Varnodes in time for data&#45;type propagation." alt="" coords="120,765,279,792"/>
<area shape="rect" id="node18" href="$class_action_dynamic_symbols.html" title="Make final attachments of dynamically mapped symbols to Varnodes." alt="" coords="119,816,280,843"/>
<area shape="rect" id="node19" href="$class_action_extra_pop_setup.html" title="Define formal link between stack&#45;pointer values before and after sub&#45;function calls." alt="" coords="126,867,273,893"/>
<area shape="rect" id="node20" href="$class_action_final_structure.html" title="Perform final organization of the control&#45;flow structure." alt="" coords="129,917,269,944"/>
<area shape="rect" id="node21" href="$class_action_force_goto.html" title="Apply any overridden forced gotos." alt="" coords="139,968,259,995"/>
<area shape="rect" id="node22" href="$class_action_func_link.html" title="Prepare for data&#45;flow analysis of function parameters." alt="" coords="143,1019,255,1045"/>
<area shape="rect" id="node23" href="$class_action_func_link_out_only.html" title="Prepare for data&#45;flow analysis of function parameters, when recovery isn&#39;t required." alt="" coords="119,1069,279,1096"/>
<area shape="rect" id="node24" href="$class_action_group.html" title="A group of actions (generally) applied in sequence." alt="" coords="152,1120,247,1147"/>
<area shape="rect" id="node26" href="$class_action_heritage.html" title="Build Static Single Assignment (SSA) representation for function." alt="" coords="146,1171,253,1197"/>
<area shape="rect" id="node27" href="$class_action_hide_shadow.html" title="Locate shadow Varnodes and adjust them so they are hidden." alt="" coords="134,1221,265,1248"/>
<area shape="rect" id="node28" href="$class_action_infer_types.html" title="Infer and propagate data&#45;types." alt="" coords="140,1272,259,1299"/>
<area shape="rect" id="node29" href="$class_action_input_prototype.html" title="Calculate the prototype for the function." alt="" coords="128,1323,271,1349"/>
<area shape="rect" id="node30" href="$class_action_likely_trash.html" title="Get rid of registers with trash values." alt="" coords="137,1373,262,1400"/>
<area shape="rect" id="node31" href="$class_action_map_globals.html" title="Create symbols for any discovered global variables in the function." alt="" coords="135,1424,263,1451"/>
<area shape="rect" id="node32" href="$class_action_mark_explicit.html" title="Find explicit Varnodes: Varnodes that have an explicit token representing them in the output." alt="" coords="134,1475,265,1501"/>
<area shape="rect" id="node33" href="$class_action_mark_implied.html" title="Mark all the implied Varnode objects, which will have no explicit token in the output." alt="" coords="135,1525,264,1552"/>
<area shape="rect" id="node34" href="$class_action_mark_indirect_only.html" title="Mark illegal Varnode inputs used only in CPUI_INDIRECT ops." alt="" coords="121,1576,278,1603"/>
<area shape="rect" id="node35" href="$class_action_merge_adjacent.html" title="Try to merge an op&#39;s input Varnode to its output, if they are at the same storage location." alt="" coords="126,1627,273,1653"/>
<area shape="rect" id="node36" href="$class_action_merge_copy.html" title="Try to merge the input and output Varnodes of a CPUI_COPY op." alt="" coords="137,1677,262,1704"/>
<area shape="rect" id="node37" href="$class_action_merge_required.html" title="Make required Varnode merges as dictated by CPUI_MULTIEQUAL, CPUI_INDIRECT, and addrtied property." alt="" coords="126,1728,273,1755"/>
<area shape="rect" id="node38" href="$class_action_merge_type.html" title="Try to merge Varnodes of the same type (if they don&#39;t hold different values at the same time)" alt="" coords="138,1779,261,1805"/>
<area shape="rect" id="node39" href="$class_action_multi_cse.html" title="Perform Common Sub&#45;expression Elimination on CPUI_MULTIEQUAL ops." alt="" coords="144,1829,255,1856"/>
<area shape="rect" id="node40" href="$class_action_name_vars.html" title="Choose names for all high&#45;level variables (HighVariables)" alt="" coords="139,1880,259,1907"/>
<area shape="rect" id="node41" href="$class_action_node_join.html" title="Look for conditional branch expressions that have been split and rejoin them." alt="" coords="143,1931,255,1957"/>
<area shape="rect" id="node42" href="$class_action_nonzero_mask.html" title="Calculate the non&#45;zero mask property on all Varnode objects." alt="" coords="130,1981,269,2008"/>
<area shape="rect" id="node43" href="$class_action_normalize_branches.html" title="Flip conditional control&#45;flow so that preferred comparison operators are used." alt="" coords="113,2032,285,2059"/>
<area shape="rect" id="node44" href="$class_action_normalize_setup.html" title="Prepare function prototypes for &quot;normalize&quot; simplification." alt="" coords="124,2083,275,2109"/>
<area shape="rect" id="node45" href="$class_action_output_prototype.html" title="Set the (already) recovered output data&#45;type as a formal part of the prototype." alt="" coords="122,2133,277,2160"/>
<area shape="rect" id="node46" href="$class_action_param_double.html" title="Deal with situations that look like double precision parameters." alt="" coords="131,2184,268,2211"/>
<area shape="rect" id="node47" href="$class_action_pool.html" title="A pool of Rules that apply simultaneously." alt="" coords="157,2235,242,2261"/>
<area shape="rect" id="node48" href="$class_action_prefer_complement.html" title="Attempt to normalize symmetric block structures." alt="" coords="116,2285,283,2312"/>
<area shape="rect" id="node49" href="$class_action_prototype_types.html" title="Lay down locked input and output data&#45;type information." alt="" coords="124,2336,275,2363"/>
<area shape="rect" id="node50" href="$class_action_prototype_warnings.html" title="Add warnings for prototypes that aren&#39;t modeled properly." alt="" coords="114,2387,285,2413"/>
<area shape="rect" id="node51" href="$class_action_redund_branch.html" title="Get rid of redundant branches: duplicate edges between the same input and output block." alt="" coords="127,2437,271,2464"/>
<area shape="rect" id="node52" href="$class_action_restrict_local.html" title="Restrict possible range of local variables." alt="" coords="132,2488,267,2515"/>
<area shape="rect" id="node53" href="$class_action_restructure_high.html" title="Create symbols that map out the local stack&#45;frame for the function." alt="" coords="123,2539,275,2565"/>
<area shape="rect" id="node54" href="$class_action_restructure_varnode.html" title="Create symbols that map out the local stack&#45;frame for the function." alt="" coords="112,2589,287,2616"/>
<area shape="rect" id="node55" href="$class_action_return_recovery.html" title="Determine data&#45;flow holding the return value of the function." alt="" coords="124,2640,275,2667"/>
<area shape="rect" id="node56" href="$class_action_return_split.html" title="Split the epilog code of the function." alt="" coords="138,2691,261,2717"/>
<area shape="rect" id="node57" href="$class_action_segmentize.html" title="Make sure pointers into segmented spaces have the correct form." alt="" coords="135,2741,263,2768"/>
<area shape="rect" id="node58" href="$class_action_set_casts.html" title="Fill&#45;in CPUI_CAST p&#45;code ops as required by the casting strategy." alt="" coords="143,2792,256,2819"/>
<area shape="rect" id="node59" href="$class_action_shadow_var.html" title="Check for one CPUI_MULTIEQUAL input set defining more than one Varnode." alt="" coords="137,2843,262,2869"/>
<area shape="rect" id="node60" href="$class_action_spacebase.html" title="Mark Varnode objects that hold stack&#45;pointer values and set&#45;up special data&#45;type." alt="" coords="137,2893,261,2920"/>
<area shape="rect" id="node61" href="$class_action_stack_ptr_flow.html" title="Analyze change to the stack pointer across sub&#45;function calls." alt="" coords="131,2944,268,2971"/>
<area shape="rect" id="node62" href="$class_action_start.html" title="Gather raw p&#45;code for a function." alt="" coords="156,2995,243,3021"/>
<area shape="rect" id="node63" href="$class_action_start_clean_up.html" title="Start clean up after main transform phase." alt="" coords="131,3045,267,3072"/>
<area shape="rect" id="node64" href="$class_action_start_types.html" title="Allow type recovery to start happening." alt="" coords="138,3096,261,3123"/>
<area shape="rect" id="node65" href="$class_action_stop.html" title="Do any post&#45;processing after decompilation." alt="" coords="156,3147,243,3173"/>
<area shape="rect" id="node66" href="$class_action_switch_norm.html" title="Normalize jump&#45;table construction." alt="" coords="135,3197,264,3224"/>
<area shape="rect" id="node67" href="$class_action_unjustified_params.html" title="Adjust improperly justified parameters." alt="" coords="117,3248,281,3275"/>
<area shape="rect" id="node68" href="$class_action_unreachable.html" title="Remove unreachable blocks." alt="" coords="134,3299,265,3325"/>
<area shape="rect" id="node69" href="$class_action_varnode_props.html" title="Transform read&#45;only variables to constants." alt="" coords="129,3349,270,3376"/>
<area shape="rect" id="node25" href="$class_action_restart_group.html" title="Action which checks if restart (sub)actions have been generated and restarts itself." alt="" coords="335,1120,471,1147"/>
</map>
