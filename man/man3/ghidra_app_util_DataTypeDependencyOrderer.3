.TH "ghidra.app.util.DataTypeDependencyOrderer" 3 "Sun Apr 14 2019" "decompile" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ghidra.app.util.DataTypeDependencyOrderer \- Creates an acyclic dependency list of data types\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBEntry\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBaddType\fP (DataType dataType)"
.br
.ti -1c
.RI "void \fBaddTypeList\fP (ArrayList< DataType > dtlist)"
.br
.ti -1c
.RI "void \fBremoveType\fP (DataType dataType)"
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "\fBDataTypeDependencyOrderer\fP (DataTypeManager dtManager)"
.br
.ti -1c
.RI "\fBDataTypeDependencyOrderer\fP (DataTypeManager dtManager, ArrayList< DataType > dtlist)"
.br
.ti -1c
.RI "Pair< ArrayList< DataType >, ArrayList< DataType > > \fBgetAcyclicDependencyLists\fP ()"
.br
.ti -1c
.RI "ArrayList< DataType > \fBgetStructList\fP ()"
.br
.ti -1c
.RI "ArrayList< DataType > \fBgetDependencyList\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Creates an acyclic dependency list of data types\&. 
.PP
Definition at line 26 of file DataTypeDependencyOrderer\&.java\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ghidra\&.app\&.util\&.DataTypeDependencyOrderer\&.DataTypeDependencyOrderer (DataTypeManager dtManager)\fC [inline]\fP"
This constructor starts with an empty DataType list, which can be added to\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdtManager\fP the manager used to extract IDs 
.RE
.PP

.PP
Definition at line 129 of file DataTypeDependencyOrderer\&.java\&.
.SS "ghidra\&.app\&.util\&.DataTypeDependencyOrderer\&.DataTypeDependencyOrderer (DataTypeManager dtManager, ArrayList< DataType > dtlist)\fC [inline]\fP"
This constructor takes an initial DataType list\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdtManager\fP the manager used to extract IDs 
.br
\fIdtlist\fP Initial list of DataTypes to order 
.RE
.PP

.PP
Definition at line 138 of file DataTypeDependencyOrderer\&.java\&.
.SH "Member Function Documentation"
.PP 
.SS "void ghidra\&.app\&.util\&.DataTypeDependencyOrderer\&.addType (DataType dataType)\fC [inline]\fP"
This method adds a single DataTypes to the input DataType list and marks the data as dirty (all must need recalculated)\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdataType\fP A single DataType to add to the input DataType list\&. 
.RE
.PP

.PP
Definition at line 80 of file DataTypeDependencyOrderer\&.java\&.
.SS "void ghidra\&.app\&.util\&.DataTypeDependencyOrderer\&.addTypeList (ArrayList< DataType > dtlist)\fC [inline]\fP"
This method adds a list of DataTypes to the input DataType list and marks the data as dirty (all must need recalculated)\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdtlist\fP List of DataTypes to add to the input DataType list\&. 
.RE
.PP

.PP
Definition at line 93 of file DataTypeDependencyOrderer\&.java\&.
.SS "void ghidra\&.app\&.util\&.DataTypeDependencyOrderer\&.clear (void)\fC [inline]\fP"
This method clears the input DataType list and marks the data as dirty (all must need recalculated)\&. 
.PP
Definition at line 120 of file DataTypeDependencyOrderer\&.java\&.
.SS "Pair<ArrayList<DataType>, ArrayList<DataType> > ghidra\&.app\&.util\&.DataTypeDependencyOrderer\&.getAcyclicDependencyLists ()\fC [inline]\fP"
This method returns two lists: 1) is the set of structs and typedefs to structs\&. Intended for outputting zero-sized definitions\&. 2) is the acyclic dependency list (broken at structs and pointers to structs) This works (and the dependency graph is able to be broken of cycles) because structures can be given zero size to start with and then later updated with full size\&. 
.PP
\fBReturns:\fP
.RS 4
pair of arrayLists--one of structs and one complete list of dependents 
.RE
.PP

.PP
Definition at line 151 of file DataTypeDependencyOrderer\&.java\&.
.SS "ArrayList<DataType> ghidra\&.app\&.util\&.DataTypeDependencyOrderer\&.getDependencyList ()\fC [inline]\fP"
This returns the acyclic dependency list (broken at structs and pointers to structs) 
.PP
\fBReturns:\fP
.RS 4
An ArrayList of dependents\&. 
.RE
.PP

.PP
Definition at line 175 of file DataTypeDependencyOrderer\&.java\&.
.SS "ArrayList<DataType> ghidra\&.app\&.util\&.DataTypeDependencyOrderer\&.getStructList ()\fC [inline]\fP"
This method returns the ArrayList of structs and typedefs to structs found in the input list, intended to be used initially as zero-sized structures\&. 
.PP
\fBReturns:\fP
.RS 4
An arrayList of structs and typedefs of structs 
.RE
.PP

.PP
Definition at line 164 of file DataTypeDependencyOrderer\&.java\&.
.SS "void ghidra\&.app\&.util\&.DataTypeDependencyOrderer\&.removeType (DataType dataType)\fC [inline]\fP"
This method removes a DataType from the list and marks the data as dirty (all must need recalculated)\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdataType\fP The DataType to remove from the input list 
.RE
.PP

.PP
Definition at line 108 of file DataTypeDependencyOrderer\&.java\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for decompile from the source code\&.
