.TH "ActionPrototypeTypes" 3 "Sun Apr 14 2019" "decompile" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ActionPrototypeTypes \- Lay down locked input and output data-type information\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <coreaction\&.hh>\fP
.PP
Inherits \fBAction\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBextendInput\fP (\fBFuncdata\fP &data, \fBVarnode\fP *invn, \fBProtoParameter\fP *param, \fBBlockBasic\fP *topbl)"
.br
.RI "Extend \fBVarnode\fP inputs to match prototype model\&. "
.ti -1c
.RI "\fBActionPrototypeTypes\fP (const string &g)"
.br
.RI "\fBConstructor\fP\&. "
.ti -1c
.RI "virtual \fBAction\fP * \fBclone\fP (const \fBActionGroupList\fP &grouplist) const"
.br
.RI "Clone the \fBAction\fP\&. "
.ti -1c
.RI "virtual int4 \fBapply\fP (\fBFuncdata\fP &data)"
.br
.RI "Make a single attempt to apply \fBthis\fP \fBAction\fP\&. "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Lay down locked input and output data-type information\&. 

Build forced input/output Varnodes and extend them as appropriate\&. Set types on output forced Varnodes (input types are set automatically by the database)\&. Initialize output recovery process\&. 
.PP
Definition at line 565 of file coreaction\&.hh\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ActionPrototypeTypes::ActionPrototypeTypes (const string & g)\fC [inline]\fP"

.PP
\fBConstructor\fP\&. 
.PP
Definition at line 568 of file coreaction\&.hh\&.
.SH "Member Function Documentation"
.PP 
.SS "int4 ActionPrototypeTypes::apply (\fBFuncdata\fP & data)\fC [virtual]\fP"

.PP
Make a single attempt to apply \fBthis\fP \fBAction\fP\&. This is the main entry point for applying changes to a function that are specific to \fBthis\fP \fBAction\fP\&. The method can inspect whatever it wants to decide if the \fBAction\fP does or does not apply\&. Changes are indicated by incrementing the \fBcount\fP field\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP is the function to inspect/modify 
.RE
.PP
\fBReturns:\fP
.RS 4
0 for a complete application, -1 for a partial completion (due to breakpoint) 
.RE
.PP

.PP
Implements \fBAction\fP\&.
.PP
Definition at line 3320 of file coreaction\&.cc\&.
.SS "virtual \fBAction\fP* ActionPrototypeTypes::clone (const \fBActionGroupList\fP & grouplist) const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Clone the \fBAction\fP\&. If \fBthis\fP \fBAction\fP is a member of one of the groups in the grouplist, this returns a clone of the \fBAction\fP, otherwise NULL is returned\&. 
.PP
\fBParameters:\fP
.RS 4
\fIgrouplist\fP is the list of groups being cloned 
.RE
.PP
\fBReturns:\fP
.RS 4
the cloned \fBAction\fP or NULL 
.RE
.PP

.PP
Implements \fBAction\fP\&.
.PP
Definition at line 569 of file coreaction\&.hh\&.
.SS "void ActionPrototypeTypes::extendInput (\fBFuncdata\fP & data, \fBVarnode\fP * invn, \fBProtoParameter\fP * param, \fBBlockBasic\fP * topbl)"

.PP
Extend \fBVarnode\fP inputs to match prototype model\&. For prototype models that assume input variables are already extended in some way, insert the appropriate extension operation to allow correct small-size input \fBVarnode\fP to exist\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP is the function being analyzed 
.br
\fIinvn\fP is the given (small) input \fBVarnode\fP 
.br
\fIparam\fP is the matching symbol info for the \fBVarnode\fP 
.br
\fItopbl\fP is the entry block for the function 
.RE
.PP

.PP
Definition at line 3301 of file coreaction\&.cc\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for decompile from the source code\&.
