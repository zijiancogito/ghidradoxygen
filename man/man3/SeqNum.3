.TH "SeqNum" 3 "Sun Apr 14 2019" "decompile" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SeqNum \- A class for uniquely labelling and comparing PcodeOps\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <address\&.hh>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSeqNum\fP (void)"
.br
.RI "Create an invalid sequence number\&. "
.ti -1c
.RI "\fBSeqNum\fP (\fBAddress::mach_extreme\fP ex)"
.br
.RI "Create an extremal sequence number\&. "
.ti -1c
.RI "\fBSeqNum\fP (const \fBAddress\fP &a, uintm b)"
.br
.RI "Create a sequence number with a specific \fItime\fP field\&. "
.ti -1c
.RI "\fBSeqNum\fP (const \fBSeqNum\fP &op2)"
.br
.RI "Copy a sequence number\&. "
.ti -1c
.RI "const \fBAddress\fP & \fBgetAddr\fP (void) const"
.br
.RI "Get the address portion of a sequence number\&. "
.ti -1c
.RI "uintm \fBgetTime\fP (void) const"
.br
.RI "Get the \fItime\fP field of a sequence number\&. "
.ti -1c
.RI "uintm \fBgetOrder\fP (void) const"
.br
.RI "Get the \fIorder\fP field of a sequence number\&. "
.ti -1c
.RI "void \fBsetOrder\fP (uintm ord)"
.br
.RI "Set the \fIorder\fP field of a sequence number\&. "
.ti -1c
.RI "bool \fBoperator==\fP (const \fBSeqNum\fP &op2) const"
.br
.RI "Compare two sequence numbers for equality\&. "
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBSeqNum\fP &op2) const"
.br
.RI "Compare two sequence numbers for inequality\&. "
.ti -1c
.RI "bool \fBoperator<\fP (const \fBSeqNum\fP &op2) const"
.br
.RI "Compare two sequence numbers with their natural order\&. "
.ti -1c
.RI "void \fBsaveXml\fP (ostream &s) const"
.br
.RI "Save a \fBSeqNum\fP to a stream as an XML tag\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBSeqNum\fP \fBrestoreXml\fP (const \fBElement\fP *el, const \fBAddrSpaceManager\fP *manage)"
.br
.RI "Restore a \fBSeqNum\fP from parsed XML\&. "
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "ostream & \fBoperator<<\fP (ostream &s, const \fBSeqNum\fP &sq)"
.br
.RI "Write out a \fBSeqNum\fP to a stream\&. "
.in -1c
.SH "Detailed Description"
.PP 
A class for uniquely labelling and comparing PcodeOps\&. 

Different PcodeOps generated by a single machine instruction can only be labelled with a single \fBAddress\fP\&. But PcodeOps must be distinguishable and compared for execution order\&. A \fBSeqNum\fP extends the address for a \fBPcodeOp\fP to include:
.IP "\(bu" 2
A fixed \fItime\fP field, which is set at the time the \fBPcodeOp\fP is created\&. The \fItime\fP field guarantees a unique \fBSeqNum\fP for the life of the \fBPcodeOp\fP\&.
.IP "\(bu" 2
An \fIorder\fP field, which is guaranteed to be comparable for the execution order of the \fBPcodeOp\fP within its basic block\&. The \fIorder\fP field also provides uniqueness but may change over time if the syntax tree is manipulated\&. 
.PP

.PP
Definition at line 109 of file address\&.hh\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SeqNum::SeqNum (void)\fC [inline]\fP"

.PP
Create an invalid sequence number\&. 
.PP
Definition at line 114 of file address\&.hh\&.
.SS "SeqNum::SeqNum (\fBAddress::mach_extreme\fP ex)"

.PP
Create an extremal sequence number\&. 
.PP
Definition at line 41 of file address\&.cc\&.
.SS "SeqNum::SeqNum (const \fBAddress\fP & a, uintm b)\fC [inline]\fP"

.PP
Create a sequence number with a specific \fItime\fP field\&. 
.PP
Definition at line 118 of file address\&.hh\&.
.SS "SeqNum::SeqNum (const \fBSeqNum\fP & op2)\fC [inline]\fP"

.PP
Copy a sequence number\&. 
.PP
Definition at line 121 of file address\&.hh\&.
.SH "Member Function Documentation"
.PP 
.SS "const \fBAddress\fP& SeqNum::getAddr (void) const\fC [inline]\fP"

.PP
Get the address portion of a sequence number\&. 
.PP
Definition at line 124 of file address\&.hh\&.
.SS "uintm SeqNum::getOrder (void) const\fC [inline]\fP"

.PP
Get the \fIorder\fP field of a sequence number\&. 
.PP
Definition at line 130 of file address\&.hh\&.
.SS "uintm SeqNum::getTime (void) const\fC [inline]\fP"

.PP
Get the \fItime\fP field of a sequence number\&. 
.PP
Definition at line 127 of file address\&.hh\&.
.SS "bool SeqNum::operator!= (const \fBSeqNum\fP & op2) const\fC [inline]\fP"

.PP
Compare two sequence numbers for inequality\&. 
.PP
Definition at line 139 of file address\&.hh\&.
.SS "bool SeqNum::operator< (const \fBSeqNum\fP & op2) const\fC [inline]\fP"

.PP
Compare two sequence numbers with their natural order\&. 
.PP
Definition at line 142 of file address\&.hh\&.
.SS "bool SeqNum::operator== (const \fBSeqNum\fP & op2) const\fC [inline]\fP"

.PP
Compare two sequence numbers for equality\&. 
.PP
Definition at line 136 of file address\&.hh\&.
.SS "\fBSeqNum\fP SeqNum::restoreXml (const \fBElement\fP * el, const \fBAddrSpaceManager\fP * manage)\fC [static]\fP"

.PP
Restore a \fBSeqNum\fP from parsed XML\&. 
.PP
Definition at line 56 of file address\&.cc\&.
.SS "void SeqNum::saveXml (ostream & s) const"

.PP
Save a \fBSeqNum\fP to a stream as an XML tag\&. 
.PP
Definition at line 47 of file address\&.cc\&.
.SS "void SeqNum::setOrder (uintm ord)\fC [inline]\fP"

.PP
Set the \fIorder\fP field of a sequence number\&. 
.PP
Definition at line 133 of file address\&.hh\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "ostream& operator<< (ostream & s, const \fBSeqNum\fP & sq)\fC [friend]\fP"

.PP
Write out a \fBSeqNum\fP to a stream\&. 
.PP
Definition at line 19 of file address\&.cc\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for decompile from the source code\&.
