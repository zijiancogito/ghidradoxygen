.TH "ParamListRegister" 3 "Sun Apr 14 2019" "decompile" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ParamListRegister \- An unstructured model for passing input parameters to a function\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <fspec\&.hh>\fP
.PP
Inherits \fBParamListStandard\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBParamListRegister\fP (void)"
.br
.RI "\fBConstructor\fP for use with \fBrestoreXml()\fP "
.ti -1c
.RI "\fBParamListRegister\fP (const \fBParamListRegister\fP &op2)"
.br
.RI "Copy constructor\&. "
.ti -1c
.RI "virtual uint4 \fBgetType\fP (void) const"
.br
.RI "Get the type of parameter list\&. "
.ti -1c
.RI "virtual void \fBfillinMap\fP (\fBParamActive\fP *active) const"
.br
.RI "Given an unordered list of storage locations, calculate a function prototype\&. "
.ti -1c
.RI "virtual \fBParamList\fP * \fBclone\fP (void) const"
.br
.RI "Clone this parameter list model\&. "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
An unstructured model for passing input parameters to a function\&. 

This is the \fBregister\fP model, meaning a collection of registers, any of which can be used to pass a parameter\&. This is nearly identical to \fBParamListStandard\fP, but rules banning \fIholes\fP are not enforced, any subset of the resource list can be used\&. This makes sense for executables where parameters follow no conventions or only loose conventions\&. The \fBassignMap()\fP method may make less sense in this scenario\&. 
.PP
Definition at line 494 of file fspec\&.hh\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ParamListRegister::ParamListRegister (void)\fC [inline]\fP"

.PP
\fBConstructor\fP for use with \fBrestoreXml()\fP 
.PP
Definition at line 496 of file fspec\&.hh\&.
.SS "ParamListRegister::ParamListRegister (const \fBParamListRegister\fP & op2)\fC [inline]\fP"

.PP
Copy constructor\&. 
.PP
Definition at line 497 of file fspec\&.hh\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBParamList\fP * ParamListRegister::clone (void) const\fC [virtual]\fP"

.PP
Clone this parameter list model\&. 
.PP
Reimplemented from \fBParamListStandard\fP\&.
.PP
Definition at line 1105 of file fspec\&.cc\&.
.SS "void ParamListRegister::fillinMap (\fBParamActive\fP * active) const\fC [virtual]\fP"

.PP
Given an unordered list of storage locations, calculate a function prototype\&. A list of input (or output) trials is given, which may have holes, invalid inputs etc\&. Decide on the formal ordered parameter list\&. Trials within the \fBParamActive\fP are added, removed, or reordered as needed\&. 
.PP
\fBParameters:\fP
.RS 4
\fIactive\fP is the given list of trials 
.RE
.PP

.PP
Reimplemented from \fBParamListStandard\fP\&.
.PP
Definition at line 1084 of file fspec\&.cc\&.
.SS "virtual uint4 ParamListRegister::getType (void) const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Get the type of parameter list\&. 
.PP
Reimplemented from \fBParamListStandard\fP\&.
.PP
Definition at line 498 of file fspec\&.hh\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for decompile from the source code\&.
