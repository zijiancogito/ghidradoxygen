.TH "TypePointer" 3 "Sun Apr 14 2019" "decompile" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TypePointer \- \fBDatatype\fP object representing a pointer\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <type\&.hh>\fP
.PP
Inherits \fBDatatype\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTypePointer\fP (const \fBTypePointer\fP &op)"
.br
.RI "Construct from another \fBTypePointer\fP\&. "
.ti -1c
.RI "\fBTypePointer\fP (int4 s, \fBDatatype\fP *pt, uint4 ws)"
.br
.RI "Construct from a size, pointed-to type, and wordsize\&. "
.ti -1c
.RI "\fBDatatype\fP * \fBgetPtrTo\fP (void) const"
.br
.RI "Get the pointed-to \fBDatatype\fP\&. "
.ti -1c
.RI "uint4 \fBgetWordSize\fP (void) const"
.br
.RI "Get the wordsize of the pointer\&. "
.ti -1c
.RI "virtual void \fBprintRaw\fP (ostream &s) const"
.br
.RI "Print a description of the type to stream\&. "
.ti -1c
.RI "virtual int4 \fBnumDepend\fP (void) const"
.br
.RI "Return number of component sub-types\&. "
.ti -1c
.RI "virtual \fBDatatype\fP * \fBgetDepend\fP (int4 index) const"
.br
.RI "Return the i-th component sub-type\&. "
.ti -1c
.RI "virtual void \fBprintNameBase\fP (ostream &s) const"
.br
.RI "Print name as short prefix\&. "
.ti -1c
.RI "virtual int4 \fBcompare\fP (const \fBDatatype\fP &op, int4 level) const"
.br
.RI "Compare for functional equivalence\&. "
.ti -1c
.RI "virtual int4 \fBcompareDependency\fP (const \fBDatatype\fP &op) const"
.br
.RI "Compare for storage in tree structure\&. "
.ti -1c
.RI "virtual \fBDatatype\fP * \fBclone\fP (void) const"
.br
.RI "Clone the data-type\&. "
.ti -1c
.RI "virtual void \fBsaveXml\fP (ostream &s) const"
.br
.RI "Serialize the data-type to XML\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBrestoreXml\fP (const \fBElement\fP *el, \fBTypeFactory\fP &typegrp)"
.br
.RI "Restore data-type from XML\&. "
.ti -1c
.RI "\fBTypePointer\fP (void)"
.br
.RI "Internal constructor for use with restoreXml\&. "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBDatatype\fP * \fBptrto\fP"
.br
.RI "Type being pointed to\&. "
.ti -1c
.RI "uint4 \fBwordsize\fP"
.br
.RI "What size unit does the pointer address\&. "
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBTypeFactory\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
\fBDatatype\fP object representing a pointer\&. 
.PP
Definition at line 218 of file type\&.hh\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "TypePointer::TypePointer (void)\fC [inline]\fP, \fC [protected]\fP"

.PP
Internal constructor for use with restoreXml\&. 
.PP
Definition at line 225 of file type\&.hh\&.
.SS "TypePointer::TypePointer (const \fBTypePointer\fP & op)\fC [inline]\fP"

.PP
Construct from another \fBTypePointer\fP\&. 
.PP
Definition at line 228 of file type\&.hh\&.
.SS "TypePointer::TypePointer (int4 s, \fBDatatype\fP * pt, uint4 ws)\fC [inline]\fP"

.PP
Construct from a size, pointed-to type, and wordsize\&. 
.PP
Definition at line 230 of file type\&.hh\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual \fBDatatype\fP* TypePointer::clone (void) const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Clone the data-type\&. 
.PP
Implements \fBDatatype\fP\&.
.PP
Definition at line 239 of file type\&.hh\&.
.SS "int4 TypePointer::compare (const \fBDatatype\fP & op, int4 level) const\fC [virtual]\fP"

.PP
Compare for functional equivalence\&. Compare \fBthis\fP with another data-type\&. 0 (equality) means the data-types are functionally equivalent (even if names differ) Smaller types come earlier\&. More specific types come earlier\&. 
.PP
\fBParameters:\fP
.RS 4
\fIop\fP is the data-type to compare with \fBthis\fP 
.br
\fIlevel\fP is maximum level to descend when recursively comparing 
.RE
.PP
\fBReturns:\fP
.RS 4
negative, 0, positive depending on ordering of types 
.RE
.PP

.PP
Reimplemented from \fBDatatype\fP\&.
.PP
Definition at line 387 of file type\&.cc\&.
.SS "int4 TypePointer::compareDependency (const \fBDatatype\fP & op) const\fC [virtual]\fP"

.PP
Compare for storage in tree structure\&. Ordering of data-types for the main \fBTypeFactory\fP container\&. Comparison only goes down one-level in the component structure, before just comparing pointers\&. 
.PP
\fBParameters:\fP
.RS 4
\fIop\fP is the data-type to compare with \fBthis\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
negative, 0, positive depending on ordering of types 
.RE
.PP

.PP
Reimplemented from \fBDatatype\fP\&.
.PP
Definition at line 405 of file type\&.cc\&.
.SS "virtual \fBDatatype\fP* TypePointer::getDepend (int4 index) const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Return the i-th component sub-type\&. 
.PP
Reimplemented from \fBDatatype\fP\&.
.PP
Definition at line 235 of file type\&.hh\&.
.SS "\fBDatatype\fP* TypePointer::getPtrTo (void) const\fC [inline]\fP"

.PP
Get the pointed-to \fBDatatype\fP\&. 
.PP
Definition at line 231 of file type\&.hh\&.
.SS "uint4 TypePointer::getWordSize (void) const\fC [inline]\fP"

.PP
Get the wordsize of the pointer\&. 
.PP
Definition at line 232 of file type\&.hh\&.
.SS "virtual int4 TypePointer::numDepend (void) const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Return number of component sub-types\&. 
.PP
Reimplemented from \fBDatatype\fP\&.
.PP
Definition at line 234 of file type\&.hh\&.
.SS "virtual void TypePointer::printNameBase (ostream & s) const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Print name as short prefix\&. 
.PP
Reimplemented from \fBDatatype\fP\&.
.PP
Definition at line 236 of file type\&.hh\&.
.SS "void TypePointer::printRaw (ostream & s) const\fC [virtual]\fP"

.PP
Print a description of the type to stream\&. Print a raw description of the type to stream\&. Intended for debugging\&. Not intended to produce parsable C\&. 
.PP
\fBParameters:\fP
.RS 4
\fIs\fP is the output stream 
.RE
.PP

.PP
Reimplemented from \fBDatatype\fP\&.
.PP
Definition at line 380 of file type\&.cc\&.
.SS "void TypePointer::restoreXml (const \fBElement\fP * el, \fBTypeFactory\fP & typegrp)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Restore data-type from XML\&. Restore a \fBDatatype\fP object from an XML element 
.PP
\fBParameters:\fP
.RS 4
\fIel\fP is the XML element 
.br
\fItypegrp\fP is the underlying \fBTypeFactory\fP that will hold the new object 
.RE
.PP

.PP
Reimplemented from \fBDatatype\fP\&.
.PP
Definition at line 431 of file type\&.cc\&.
.SS "void TypePointer::saveXml (ostream & s) const\fC [virtual]\fP"

.PP
Serialize the data-type to XML\&. Write out a formal description of the data-type as an XML <type> tag\&. For composite data-types, the description goes down one level, describing the component types only by reference\&. 
.PP
\fBParameters:\fP
.RS 4
\fIs\fP is the stream to write to 
.RE
.PP

.PP
Reimplemented from \fBDatatype\fP\&.
.PP
Definition at line 419 of file type\&.cc\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "friend class \fBTypeFactory\fP\fC [friend]\fP"

.PP
Definition at line 220 of file type\&.hh\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBDatatype\fP* TypePointer::ptrto\fC [protected]\fP"

.PP
Type being pointed to\&. 
.PP
Definition at line 221 of file type\&.hh\&.
.SS "uint4 TypePointer::wordsize\fC [protected]\fP"

.PP
What size unit does the pointer address\&. 
.PP
Definition at line 222 of file type\&.hh\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for decompile from the source code\&.
