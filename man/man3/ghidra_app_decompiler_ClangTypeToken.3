.TH "ghidra.app.decompiler.ClangTypeToken" 3 "Sun Apr 14 2019" "decompile" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ghidra.app.decompiler.ClangTypeToken
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBghidra\&.app\&.decompiler\&.ClangToken\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBClangTypeToken\fP (\fBClangNode\fP par)"
.br
.ti -1c
.RI "boolean \fBisVariableRef\fP ()"
.br
.ti -1c
.RI "DataType \fBgetDataType\fP ()"
.br
.ti -1c
.RI "void \fBrestoreFromXML\fP (XmlElement el, XmlElement end, PcodeFactory pfactory)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A C code token representing a data type\&. This does not include qualifiers on the type like '*' (pointer to) or '[]' (array of)\&. There should be no whitespace in the name 
.PP
Definition at line 34 of file ClangTypeToken\&.java\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ghidra\&.app\&.decompiler\&.ClangTypeToken\&.ClangTypeToken (\fBClangNode\fP par)\fC [inline]\fP"

.PP
Definition at line 37 of file ClangTypeToken\&.java\&.
.SH "Member Function Documentation"
.PP 
.SS "DataType ghidra\&.app\&.decompiler\&.ClangTypeToken\&.getDataType ()\fC [inline]\fP"

.PP
Definition at line 48 of file ClangTypeToken\&.java\&.
.SS "boolean ghidra\&.app\&.decompiler\&.ClangTypeToken\&.isVariableRef ()\fC [inline]\fP"

.PP
Definition at line 43 of file ClangTypeToken\&.java\&.
.SS "void ghidra\&.app\&.decompiler\&.ClangTypeToken\&.restoreFromXML (XmlElement el, XmlElement end, PcodeFactory pfactory)\fC [inline]\fP"

.PP
Definition at line 53 of file ClangTypeToken\&.java\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for decompile from the source code\&.
