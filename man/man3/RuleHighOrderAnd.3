.TH "RuleHighOrderAnd" 3 "Sun Apr 14 2019" "decompile" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RuleHighOrderAnd \- Simplify INT_AND when applied to aligned INT_ADD: \fC(V + c) & 0xfff0 => V + (c & 0xfff0)\fP  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ruleaction\&.hh>\fP
.PP
Inherits \fBRule\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRuleHighOrderAnd\fP (const string &g)"
.br
.RI "\fBConstructor\fP\&. "
.ti -1c
.RI "virtual \fBRule\fP * \fBclone\fP (const \fBActionGroupList\fP &grouplist) const"
.br
.RI "Clone the \fBRule\fP\&. "
.ti -1c
.RI "virtual void \fBgetOpList\fP (vector< uint4 > &oplist) const"
.br
.RI "List of op codes this rule operates on\&. "
.ti -1c
.RI "virtual int4 \fBapplyOp\fP (\fBPcodeOp\fP *op, \fBFuncdata\fP &data)"
.br
.RI "Attempt to apply \fBthis\fP \fBRule\fP\&. "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Simplify INT_AND when applied to aligned INT_ADD: \fC(V + c) & 0xfff0 => V + (c & 0xfff0)\fP 

If V and W are aligned to a mask, then \fC((V + c) + W) & 0xfff0 => (V + (c & 0xfff0)) + W\fP 
.PP
Definition at line 248 of file ruleaction\&.hh\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "RuleHighOrderAnd::RuleHighOrderAnd (const string & g)\fC [inline]\fP"

.PP
\fBConstructor\fP\&. 
.PP
Definition at line 250 of file ruleaction\&.hh\&.
.SH "Member Function Documentation"
.PP 
.SS "int4 RuleHighOrderAnd::applyOp (\fBPcodeOp\fP * op, \fBFuncdata\fP & data)\fC [virtual]\fP"

.PP
Attempt to apply \fBthis\fP \fBRule\fP\&. This method contains the main logic for applying the \fBRule\fP\&. It must use a given \fBPcodeOp\fP as the point at which the \fBRule\fP applies\&. If it does apply, changes are made directly to the function and 1 (non-zero) is returned, otherwise 0 is returned\&. 
.PP
\fBParameters:\fP
.RS 4
\fIop\fP is the given \fBPcodeOp\fP where the \fBRule\fP may apply 
.br
\fIdata\fP is the function to which to apply 
.RE
.PP

.PP
Reimplemented from \fBRule\fP\&.
.PP
Definition at line 1149 of file ruleaction\&.cc\&.
.SS "virtual \fBRule\fP* RuleHighOrderAnd::clone (const \fBActionGroupList\fP & grouplist) const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Clone the \fBRule\fP\&. If \fBthis\fP \fBRule\fP is a member of one of the groups in the grouplist, this returns a clone of the \fBRule\fP, otherwise NULL is returned\&. 
.PP
\fBParameters:\fP
.RS 4
\fIgrouplist\fP is the list of groups being cloned 
.RE
.PP
\fBReturns:\fP
.RS 4
the cloned \fBRule\fP or NULL 
.RE
.PP

.PP
Implements \fBRule\fP\&.
.PP
Definition at line 251 of file ruleaction\&.hh\&.
.SS "void RuleHighOrderAnd::getOpList (vector< uint4 > & oplist) const\fC [virtual]\fP"

.PP
List of op codes this rule operates on\&. Populate the given array with all possible OpCodes this \fBRule\fP might apply to\&. By default, this method returns all possible OpCodes 
.PP
\fBParameters:\fP
.RS 4
\fIoplist\fP is the array to populate 
.RE
.PP

.PP
Reimplemented from \fBRule\fP\&.
.PP
Definition at line 1143 of file ruleaction\&.cc\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for decompile from the source code\&.
