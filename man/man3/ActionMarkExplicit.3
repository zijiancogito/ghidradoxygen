.TH "ActionMarkExplicit" 3 "Sun Apr 14 2019" "decompile" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ActionMarkExplicit \- Find \fBexplicit\fP Varnodes: Varnodes that have an explicit token representing them in the output\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <coreaction\&.hh>\fP
.PP
Inherits \fBAction\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBActionMarkExplicit\fP (const string &g)"
.br
.RI "\fBConstructor\fP\&. "
.ti -1c
.RI "virtual \fBAction\fP * \fBclone\fP (const \fBActionGroupList\fP &grouplist) const"
.br
.RI "Clone the \fBAction\fP\&. "
.ti -1c
.RI "virtual int4 \fBapply\fP (\fBFuncdata\fP &data)"
.br
.RI "Make a single attempt to apply \fBthis\fP \fBAction\fP\&. "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Find \fBexplicit\fP Varnodes: Varnodes that have an explicit token representing them in the output\&. 

In the final output of the syntax tree as source code, all variables are characterized as either
.IP "\(bu" 2
\fBexplicit\fP, having a specific identifier in the source code, or
.IP "\(bu" 2
\fBimplied\fP, an intermediate result of an expression with no specific identifier
.PP
.PP
This \fBAction\fP does preliminary scanning of Varnodes to determine which should be explicit in the final output\&. Basically, if there is symbol information associated, the possibility of aliasing, or if there are too many reads of a \fBVarnode\fP, it should be considered explicit\&. 
.PP
Definition at line 376 of file coreaction\&.hh\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ActionMarkExplicit::ActionMarkExplicit (const string & g)\fC [inline]\fP"

.PP
\fBConstructor\fP\&. 
.PP
Definition at line 389 of file coreaction\&.hh\&.
.SH "Member Function Documentation"
.PP 
.SS "int4 ActionMarkExplicit::apply (\fBFuncdata\fP & data)\fC [virtual]\fP"

.PP
Make a single attempt to apply \fBthis\fP \fBAction\fP\&. This is the main entry point for applying changes to a function that are specific to \fBthis\fP \fBAction\fP\&. The method can inspect whatever it wants to decide if the \fBAction\fP does or does not apply\&. Changes are indicated by incrementing the \fBcount\fP field\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP is the function to inspect/modify 
.RE
.PP
\fBReturns:\fP
.RS 4
0 for a complete application, -1 for a partial completion (due to breakpoint) 
.RE
.PP

.PP
Implements \fBAction\fP\&.
.PP
Definition at line 2501 of file coreaction\&.cc\&.
.SS "virtual \fBAction\fP* ActionMarkExplicit::clone (const \fBActionGroupList\fP & grouplist) const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Clone the \fBAction\fP\&. If \fBthis\fP \fBAction\fP is a member of one of the groups in the grouplist, this returns a clone of the \fBAction\fP, otherwise NULL is returned\&. 
.PP
\fBParameters:\fP
.RS 4
\fIgrouplist\fP is the list of groups being cloned 
.RE
.PP
\fBReturns:\fP
.RS 4
the cloned \fBAction\fP or NULL 
.RE
.PP

.PP
Implements \fBAction\fP\&.
.PP
Definition at line 390 of file coreaction\&.hh\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for decompile from the source code\&.
