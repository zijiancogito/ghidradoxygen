.TH "RuleSubCommute" 3 "Sun Apr 14 2019" "decompile" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RuleSubCommute \- Commute SUBPIECE operations with earlier operations where possible\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ruleaction\&.hh>\fP
.PP
Inherits \fBRule\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRuleSubCommute\fP (const string &g)"
.br
.RI "\fBConstructor\fP\&. "
.ti -1c
.RI "virtual \fBRule\fP * \fBclone\fP (const \fBActionGroupList\fP &grouplist) const"
.br
.RI "Clone the \fBRule\fP\&. "
.ti -1c
.RI "virtual void \fBgetOpList\fP (vector< uint4 > &oplist) const"
.br
.RI "List of op codes this rule operates on\&. "
.ti -1c
.RI "virtual int4 \fBapplyOp\fP (\fBPcodeOp\fP *op, \fBFuncdata\fP &data)"
.br
.RI "Attempt to apply \fBthis\fP \fBRule\fP\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBcancelExtensions\fP (\fBPcodeOp\fP *longform, \fBPcodeOp\fP *subOp, \fBVarnode\fP *ext0In, \fBVarnode\fP *ext1In, \fBFuncdata\fP &data)"
.br
.RI "Eliminate input extensions on given binary \fBPcodeOp\fP\&. "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Commute SUBPIECE operations with earlier operations where possible\&. 

A SUBPIECE conmmutes with long and short forms of many operations\&. We try to push SUBPIECE earlier in the expression trees (preferring short versions of ops over long) in the hopes that the SUBPIECE will run into a constant, a INT_SEXT, or a INT_ZEXT, canceling out 
.PP
Definition at line 702 of file ruleaction\&.hh\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "RuleSubCommute::RuleSubCommute (const string & g)\fC [inline]\fP"

.PP
\fBConstructor\fP\&. 
.PP
Definition at line 704 of file ruleaction\&.hh\&.
.SH "Member Function Documentation"
.PP 
.SS "int4 RuleSubCommute::applyOp (\fBPcodeOp\fP * op, \fBFuncdata\fP & data)\fC [virtual]\fP"

.PP
Attempt to apply \fBthis\fP \fBRule\fP\&. This method contains the main logic for applying the \fBRule\fP\&. It must use a given \fBPcodeOp\fP as the point at which the \fBRule\fP applies\&. If it does apply, changes are made directly to the function and 1 (non-zero) is returned, otherwise 0 is returned\&. 
.PP
\fBParameters:\fP
.RS 4
\fIop\fP is the given \fBPcodeOp\fP where the \fBRule\fP may apply 
.br
\fIdata\fP is the function to which to apply 
.RE
.PP

.PP
Reimplemented from \fBRule\fP\&.
.PP
Definition at line 3847 of file ruleaction\&.cc\&.
.SS "bool RuleSubCommute::cancelExtensions (\fBPcodeOp\fP * longform, \fBPcodeOp\fP * subOp, \fBVarnode\fP * ext0In, \fBVarnode\fP * ext1In, \fBFuncdata\fP & data)\fC [static]\fP"

.PP
Eliminate input extensions on given binary \fBPcodeOp\fP\&. Make some basic checks\&. Replace the input and output Varnodes with smaller sizes\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlongform\fP is the given binary \fBPcodeOp\fP to modify 
.br
\fIsubOp\fP is the \fBPcodeOp\fP truncating the output of \fBlongform\fP 
.br
\fIext0In\fP is the first input \fBVarnode\fP before the extension 
.br
\fIext1In\fP is the second input \fBVarnode\fP before the extension 
.br
\fIdata\fP is the function being analyzed 
.RE
.PP
\fBReturns:\fP
.RS 4
true is the \fBPcodeOp\fP is successfully modified 
.RE
.PP

.PP
Definition at line 3831 of file ruleaction\&.cc\&.
.SS "virtual \fBRule\fP* RuleSubCommute::clone (const \fBActionGroupList\fP & grouplist) const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Clone the \fBRule\fP\&. If \fBthis\fP \fBRule\fP is a member of one of the groups in the grouplist, this returns a clone of the \fBRule\fP, otherwise NULL is returned\&. 
.PP
\fBParameters:\fP
.RS 4
\fIgrouplist\fP is the list of groups being cloned 
.RE
.PP
\fBReturns:\fP
.RS 4
the cloned \fBRule\fP or NULL 
.RE
.PP

.PP
Implements \fBRule\fP\&.
.PP
Definition at line 705 of file ruleaction\&.hh\&.
.SS "void RuleSubCommute::getOpList (vector< uint4 > & oplist) const\fC [virtual]\fP"

.PP
List of op codes this rule operates on\&. Populate the given array with all possible OpCodes this \fBRule\fP might apply to\&. By default, this method returns all possible OpCodes 
.PP
\fBParameters:\fP
.RS 4
\fIoplist\fP is the array to populate 
.RE
.PP

.PP
Reimplemented from \fBRule\fP\&.
.PP
Definition at line 3816 of file ruleaction\&.cc\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for decompile from the source code\&.
