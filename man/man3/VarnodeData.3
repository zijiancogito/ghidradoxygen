.TH "VarnodeData" 3 "Sun Apr 14 2019" "decompile" \" -*- nroff -*-
.ad l
.nh
.SH NAME
VarnodeData \- Data defining a specific memory location\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <pcoderaw\&.hh>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "bool \fBoperator<\fP (const \fBVarnodeData\fP &op2) const"
.br
.RI "An ordering for \fBVarnodeData\fP\&. "
.ti -1c
.RI "bool \fBoperator==\fP (const \fBVarnodeData\fP &op2) const"
.br
.RI "Compare for equality\&. "
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBVarnodeData\fP &op2) const"
.br
.RI "Compare for inequality\&. "
.ti -1c
.RI "\fBAddress\fP \fBgetAddr\fP (void) const"
.br
.RI "Get the location of the varnode as an address\&. "
.ti -1c
.RI "void \fBrestoreXml\fP (const \fBElement\fP *el, const \fBAddrSpaceManager\fP *manage)"
.br
.RI "Recover this object from an XML tag\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBAddrSpace\fP * \fBspace\fP"
.br
.RI "The address space\&. "
.ti -1c
.RI "\fBuintb\fP \fBoffset\fP"
.br
.RI "The offset within the space\&. "
.ti -1c
.RI "uint4 \fBsize\fP"
.br
.RI "The number of bytes in the location\&. "
.in -1c
.SH "Detailed Description"
.PP 
Data defining a specific memory location\&. 

Within the decompiler's model of a processor, any register, memory location, or other variable can always be represented as an address space, an offset within the space, and the size of the sequence of bytes\&. This is more commonly referred to as a \fBVarnode\fP, but this is a bare-bones container for the data that doesn't have the cached attributes and the dataflow links of the \fBVarnode\fP within its syntax tree\&. 
.PP
Definition at line 33 of file pcoderaw\&.hh\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBAddress\fP VarnodeData::getAddr (void) const\fC [inline]\fP"

.PP
Get the location of the varnode as an address\&. This is a convenience function to construct a full \fBAddress\fP from the \fBVarnodeData\fP's address space and offset 
.PP
\fBReturns:\fP
.RS 4
the address of the varnode 
.RE
.PP

.PP
Definition at line 82 of file pcoderaw\&.hh\&.
.SS "bool VarnodeData::operator!= (const \fBVarnodeData\fP & op2) const\fC [inline]\fP"

.PP
Compare for inequality\&. Compare \fBVarnodeData\fP for inequality\&. If either the space, offset, or size is not equal, return \fBtrue\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIop2\fP is the object being compared to 
.RE
.PP
\fBReturns:\fP
.RS 4
true if \fIthis\fP is not equal to \fIop2\fP 
.RE
.PP

.PP
Definition at line 73 of file pcoderaw\&.hh\&.
.SS "bool VarnodeData::operator< (const \fBVarnodeData\fP & op2) const\fC [inline]\fP"

.PP
An ordering for \fBVarnodeData\fP\&. \fBVarnodeData\fP can be sorted in terms of the space its in (the space's \fIindex\fP), the offset within the space, and finally by the size\&. 
.PP
\fBParameters:\fP
.RS 4
\fIop2\fP is the object being compared to 
.RE
.PP
\fBReturns:\fP
.RS 4
true if \fIthis\fP is less than \fIop2\fP 
.RE
.PP

.PP
Definition at line 53 of file pcoderaw\&.hh\&.
.SS "bool VarnodeData::operator== (const \fBVarnodeData\fP & op2) const\fC [inline]\fP"

.PP
Compare for equality\&. Compare \fBVarnodeData\fP for equality\&. The space, offset, and size must all be exactly equal 
.PP
\fBParameters:\fP
.RS 4
\fIop2\fP is the object being compared to 
.RE
.PP
\fBReturns:\fP
.RS 4
true if \fIthis\fP is equal to \fIop2\fP 
.RE
.PP

.PP
Definition at line 63 of file pcoderaw\&.hh\&.
.SS "void VarnodeData::restoreXml (const \fBElement\fP * el, const \fBAddrSpaceManager\fP * manage)"

.PP
Recover this object from an XML tag\&. Build this \fBVarnodeData\fP from an \fB<addr>\fP tag 
.PP
\fBParameters:\fP
.RS 4
\fIel\fP is the parsed tag 
.br
\fImanage\fP is the address space manager 
.RE
.PP

.PP
Definition at line 22 of file pcoderaw\&.cc\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBuintb\fP VarnodeData::offset"

.PP
The offset within the space\&. 
.PP
Definition at line 35 of file pcoderaw\&.hh\&.
.SS "uint4 VarnodeData::size"

.PP
The number of bytes in the location\&. 
.PP
Definition at line 36 of file pcoderaw\&.hh\&.
.SS "\fBAddrSpace\fP* VarnodeData::space"

.PP
The address space\&. 
.PP
Definition at line 34 of file pcoderaw\&.hh\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for decompile from the source code\&.
